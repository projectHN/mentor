<?php

/* @var $form Zend\Form\Form */
if(!($form = $this->form)) {
	return;
}

/**
 * @author	VanCK
 * @param \Zend\Form\Fieldset $fieldset
 */
if(!function_exists('renderSubForm')){
    function renderSubForm($view, $form, $subform)
    {
        foreach($subform as $element) {
            if($element instanceof \Zend\Form\Form) {
                renderSubForm($view, $form, $element);
            } else {
                renderFormElement($view, $form, $element);
            }
        }
    }
}

/**
 * @author	VanCK
 * @param \Zend\Form\Form $form
 * @param \Zend\Form\Element $element
 */
if(!function_exists('renderFormElement')){
    function renderFormElement($view, $form, $element)
    {
        if(!$element->getAttribute('id')) {
            $element->setAttribute('id', $element->getName());
        }

        $inputFilter = null;
        if($form->getInputFilter()->has($element->getName())) {
            /* @var $inputFilter Zend\InputFilter\Input */
            $inputFilter = $form->getInputFilter()->get($element->getName());
        }

        if($element instanceof \Zend\Form\Element\Hidden){
        	echo $view->formElement($element);
        	return;
        }
        $boundaryAttr = [
	       'class' => 'form-group'
        ];
        if($element->getOption('boundaryElement') && is_array($element->getOption('boundaryElement'))){
            foreach ($element->getOption('boundaryElement') as $attr=>$value){
                if($attr == 'class'){
                    $boundaryAttr['class'] .= ' '.$value;
                } else {
                    $boundaryAttr[$attr] = $value;
                }
            }
        }
        $boundaryElement = '<div ';
        foreach ($boundaryAttr as $attr=>$value){
            $boundaryElement .= $attr.'="'.$value.'" ';
        }
        $boundaryElement .= '/>';
        echo $boundaryElement;

        $labelSpan = '';
        $labelClass = '';
        if($element->getLabel()) {
            if($inputFilter && $inputFilter->isRequired()) {
                $labelClass = " required";
                $labelSpan = " <span class='required'>*</span> ";
            }
        }

        // set column layout
        $labelCol = "col-md-4";
        $elementCol = "col-md-8";
        if($element->getOption('layout') == 'fluid') {
            $labelCol = 'col-md-2';
            $elementCol = 'col-md-10';
        }

        echo "<label class='$labelCol control-label$labelClass'>". $element->getLabel() . $labelSpan .'</label>';
        echo "<div class='$elementCol'>";

        $class = $element->getAttribute('class');
        if(in_array($element->getAttribute('type'), ['text', 'select', 'password', 'select', 'date'])) {
            $element->setAttribute('class', $class ? $class . ' form-control' : 'form-control');
        }

        // render element based on type
        if($element instanceof \Zend\Form\Element\Radio) {
            if(is_array($element->getOption('value_options'))) {
                foreach($element->getOption('value_options') as $key => $label) {
                    echo '<label class="radio radio-inline">';
                    $checked = ($key == $element->getValue()) ? ' checked=checked ' : '';
                    echo "<input$checked type='radio' value='". $key ."' name='". $element->getName() ."'/>". $label;
                    echo '</label>';
                }
            }
            if($element->getValueOptions() && !is_array($element->getOption('value_options'))) {
                foreach($element->getValueOptions() as $key => $label) {
                    echo '<label class="radio radio-inline">';
                    $checked = ($key == $element->getValue()) ? ' checked=checked ' : '';
                    echo "<input$checked type='radio' value='". $key ."' name='". $element->getName() ."'/>". $label;
                    echo '</label>';
                }
            }
        } else if ($element->getOption('leftIcon') || $element->getOption('rightIcon')) {
            echo '<div class="input-group">';
            if($element->getOption('leftIcon')) {
                echo '<span class="input-group-addon"><i class="'. $element->getOption('leftIcon') .'"></i></span>';
            }
            echo $view->formElement($element);
            if($element->getOption('rightIcon')) {
                echo '<span class="input-group-addon"><i class="'. $element->getOption('rightIcon') .'"></i></span>';
            }
            echo '</div>';
        } else {
            echo $view->formElement($element);
        }
		if($element->getOption('descriptions') && is_array($element->getOption('descriptions'))){
			echo '<ul class="parsley-description-list">';
			foreach ($element->getOption('descriptions') as $description){
				echo '<li>'.$description.'</li>';
			}
			echo '</ul>';
		}
        // render error messages
        if(is_array($element->getMessages()) && count($element->getMessages())) {
            echo '<ul class="parsley-error-list">';
            foreach($element->getMessages() as $validatorType => $message) {
                echo '<li>'. $message .'</li>';
            }
            echo '</ul>';
        }

        echo '</div>';
        echo '</div>';
    }
}

$form->prepare();

$displayGroups = isset($this->displayGroups) ? $this->displayGroups : null;
$elementGroups = [];
if(is_array($displayGroups)) {
	foreach ($displayGroups as $groupName => $groupData) {
		$elementGroups[$groupData['startElement']] = $groupName;
		$elementGroups[$groupData['endElement']] = $groupName;
	}
}

echo $this->form()->openTag($form);
echo '<div class="form-horizontal">';

$renderingGroup = false;

foreach ($form as $element) {
	/* @var $element \Zend\Form\Element */

	// render sub form
	if($element instanceof \Zend\Form\Form) {
		if($element->getOption('clearBefore')) {
			echo '<div style="clear:both"></div>';
		}
		if($form->getOption('layout') == 'form-2-cols') {
			echo '<div class="col-md-6">';
		}
		echo '<fieldset>';
		if($element->getLabel()) {
			echo '<legend>'. $element->getLabel() .'</legend>';
		}
		renderSubForm($this, $form, $element);
		echo '</fieldset>';
		if($form->getOption('layout') == 'form-2-cols') {
			echo '</div>';
		}
		if($element->getOption('clearAfter')) {
			echo '<div style="clear:both"></div>';
		}
	} else if($element instanceof \ZendX\Form\Element\DisplayGroup) {
	    $class= 'col-md-6';
	    if($element->getAttribute('class')){
	        $class = $element->getAttribute('class');
	    }
		echo '<div class="'.$class.' ">';
		echo '<fieldset>';
		if($element->getLabel()) {
			echo '<legend>'. $element->getLabel() .'</legend>';
		}
		if(is_array($element->getElements())) {
			foreach($element->getElements() as $e) {
			    if($class != "col-md-6"){
			        $e->setOptions(array_merge($e->getOptions(), ['displayGroup' => $e->getName(), 'layout' => 'fluid']));
			    } else {
			        $e->setOptions(array_merge($e->getOptions(), ['displayGroup' => $e->getName()]));
			    }

				renderFormElement($this, $form, $e);
			}
		}
		echo '</fieldset>';
		echo '</div>';
	} else if($element instanceof \Zend\Form\Element) {
		// ignore element added to a group
		if($element->getOption('displayGroup')) {
			continue;
		}
		if(!$element->getAttribute('id')) {
			$element->setAttribute('id', $element->getName());
		}

		if($element->getOption('clearBefore')) {
			echo '<div style="clear:both"></div>';
		}

		$isHiddenField = false;
		if($element instanceof \Zend\Form\Element\Csrf || $element instanceof \Zend\Form\Element\Hidden) {
			$isHiddenField = true;
			echo $this->formElement($element);
		} else {
			if(!in_array('fluid', [$form->getOption('layout'), $element->getOption('layout')])) {
				echo '<div class="col-md-6">';
			} else {
				echo '<div class="col-md-12">';
			}
			echo '<div>';
			renderFormElement($this, $form, $element);
			echo '</div>';
		}

		if(!$isHiddenField) {
			echo '</div>';
		}

		if($element->getOption('clearAfter')) {
			echo '<div style="clear:both"></div>';
		}
	}
}
echo '</div>';

echo $this->form()->closeTag($form);

